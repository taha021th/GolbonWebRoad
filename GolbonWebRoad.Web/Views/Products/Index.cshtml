@using GolbonWebRoad.Web.Models.Products
@model ProductIndexViewModel
@{
    ViewData["Title"] = "محصولات";
    Layout = null; 

    var queryParams = Context.Request.Query.ToDictionary(q => q.Key, q => q.Value.ToString());
}

<!DOCTYPE html>
<html lang="fa" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@Model.MetaTitle</title>
    <meta name="description" content="@Model.MetaDescription">

    
    <link rel="stylesheet" href="~/css/fonts.css" />
    <link rel="stylesheet" href="~/lib/font-awesome/all.min.css">
    <!-- AOS library removed for performance -->

    @Html.Partial("_CommonStyles")

    <style>
        /* === Performance & Animation Styles === */
        .product-card-fade-in {
            opacity: 0;
            transition: opacity 0.5s ease-out;
        }
        .product-card-fade-in.is-visible {
            opacity: 1;
        }

        /* === Products Page Specific Styles === */
        .card-like {
            transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
        }

        .main-content {
            display: flex;
            gap: 30px;
            padding: 50px 0;
        }

        .filters-sidebar {
            width: 280px;
            flex-shrink: 0;
        }
        .filter-group {
            background-color: var(--card-bg-color);
            border: 1px solid var(--border-color);
            margin-bottom: 20px;
            padding: 20px;
        }
        .filter-group h3 {
            font-size: 1.2rem;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid var(--border-color);
        }
        .filter-group ul {
            list-style: none;
            padding: 0;
        }
        .filter-group li {
            margin-bottom: 10px;
        }
        .filter-group label {
            display: flex;
            align-items: center;
            gap: 10px;
            cursor: pointer;
        }
        .price-slider-values {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
            color: var(--secondary-text-color);
        }
        input[type="range"] {
            width: 100%;
        }

        .products-area {
            flex-grow: 1;
        }
        .toolbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background-color: var(--card-bg-color);
            border: 1px solid var(--border-color);
            padding: 15px;
            margin-bottom: 30px;
        }
        .toolbar select {
            background-color: var(--bg-color);
            color: var(--primary-text-color);
            border: 1px solid var(--border-color);
            padding: 8px;
            font-family: var(--main-font);
        }
        .product-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 30px;
        }
        .plp-product-card {
            background-color: var(--card-bg-color);
            border: 1px solid var(--border-color);
            overflow: hidden;
            text-align: center;
        }
        .plp-product-card .image-container {
            position: relative;
        }
        .plp-product-card img {
            width: 100%;
            height: 280px;
            object-fit: cover;
            transition: transform 0.3s ease;
        }
        .plp-product-card:hover img {
            transform: scale(1.05);
        }
        .product-overlay {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            background: rgba(0,0,0,0.7);
            padding: 15px;
            display: flex;
            justify-content: center;
            gap: 150px;
            transform: translateY(100%);
            transition: transform 0.3s ease;
        }
        .plp-product-card:hover .product-overlay {
            transform: translateY(0);
        }
        .overlay-btn {
            background-color: white;
            color: #121212;
            border-radius: 50%;
            border: none;
            padding: 10px;
            font-size: 1.1rem;
            cursor: pointer;
            width: 40px;
            height: 40px;
            line-height: 1;
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }
        .product-info {
            padding: 20px;
        }
        .product-info h4 {
            font-size: 1.1rem;
        }
        .product-info .price {
            font-size: 1.2rem;
            font-weight: 700;
            color: var(--accent-color);
            margin-top: 10px;
        }
        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 50px;
            list-style: none;
            padding: 0;
        }
        .pagination a, .pagination span {
            color: var(--primary-text-color);
            padding: 10px 15px;
            border: 1px solid var(--border-color);
            margin: 0 5px;
            transition: all 0.3s ease;
        }
        .pagination li.active a {
            background-color: var(--accent-color);
            border-color: var(--accent-color);
            color: white;
        }
        .pagination li:not(.active) a:hover {
             background-color: var(--accent-color);
            border-color: var(--accent-color);
            color: white;
        }
        .pagination li.disabled span {
            color: var(--secondary-text-color);
        }
        
        @@media (max-width: 992px) {
            .main-content { flex-direction: column; }
            .filters-sidebar { width: 100%; }
            .product-grid { grid-template-columns: repeat(2, 1fr); }
        }
         @@media (max-width: 576px) {
            .product-grid { grid-template-columns: 1fr; }
            .toolbar { flex-direction: column; gap: 15px; }
        }
    </style>
</head>
<body>
    @Html.Partial("_Header")
    
    <main>
        <header class="page-header">
            
            <h1>همه محصولات</h1>
            <div class="breadcrumb">
                <a asp-action="Index" asp-controller="Home">خانه</a> / <span>همه محصولات</span>
            </div>
        </header>

        <div class="container main-content">
            <aside class="filters-sidebar card-like">
                <div class="filter-group card-like">
                    <h3>دسته‌بندی‌ها</h3>
                    <ul>
                        @foreach (var category in Model.Categories)
                        {
                            <li><label><input type="checkbox" name="categoryId" value="@category.Id" @(Model.CurrentCategoryId == category.Id ? "checked" : "")> @category.Name</label></li>
                        }
                    </ul>
                </div>
                <div class="filter-group card-like">
                    <h3>محدوده قیمت</h3>
                    <div class="price-slider">
                        <input type="range" min="100000" max="20000000" value="5000000">
                        <div class="price-slider-values">
                            <span>۱۰۰,۰۰۰ تومان</span>
                            <span>۲۰,۰۰۰,۰۰۰ تومان</span>
                        </div>
                    </div>
                </div>
                <div class="filter-group card-like">
                    <h3>برند</h3>
                    <ul>
                        @foreach (var brand in Model.Brands)
                        {
                            <li><label><input type="checkbox" name="brandId" value="@brand.Id" @(Model.CurrentBrandId == brand.Id ? "checked" : "")> @brand.Name</label></li>
                        }
                    </ul>
                </div>
            </aside>

            <section class="products-area">
                <div class="toolbar card-like">
                    <p>
                        @if (Model.Products.TotalCount > 0)
                        {
                            <span>نمایش @Model.Products.Items.Count از @Model.Products.TotalCount محصول</span>
                        }
                        else
                        {
                            <span>هیچ محصولی یافت نشد</span>
                        }
                    </p>
                    <div class="sort-by">
                        <form id="sort-form" asp-action="Index" method="get">
                            @foreach (var param in queryParams.Where(q => q.Key != "sortOrder"))
                            {
                                <input type="hidden" name="@param.Key" value="@param.Value" />
                            }
                            <label for="sortOrder">مرتب‌سازی بر اساس: </label>
                            <select name="sortOrder" id="sortOrder" onchange="this.form.submit()">
                                <option value="" selected="@(string.IsNullOrEmpty(Model.CurrentSortOrder))">جدیدترین</option>
                                <option value="popularity">پرفروش‌ترین</option>
                                <option value="price_asc" selected="@(Model.CurrentSortOrder == "price_asc")">ارزان‌ترین</option>
                                <option value="price_desc" selected="@(Model.CurrentSortOrder == "price_desc")">گران‌ترین</option>
                            </select>
                        </form>
                    </div>
                </div>

                <div class="product-grid">
                    @foreach (var product in Model.Products.Items)
                    {
                        <div class="plp-product-card card-like product-card-fade-in">
                            <div class="image-container">
                                <a asp-controller="Products" asp-action="Detail" asp-route-id="@product.Id">
                                    <img loading="lazy" width="400" height="280" src="@(string.IsNullOrEmpty(product.ImageUrl) ? $"https://placehold.co/400x280/EFEFEF/AAAAAA?text={product.Name}" : $"{product.ImageUrl}")" alt="@(string.IsNullOrEmpty(product.MainImageAltText) ? product.Name : product.MainImageAltText)">
                                </a>
                                <div class="product-overlay">
                                    <button class="overlay-btn" title="افزودن به سبد خرید"><i class="fas fa-shopping-bag"></i></button>
                                    <a asp-controller="Products" asp-action="Detail" asp-route-id="@product.Id" class="overlay-btn" title="مشاهده جزئیات"><i class="fas fa-eye"></i></a>
                                </div>
                            </div>
                            <div class="product-info">
                                <h4><a asp-controller="Products" asp-action="Detail" asp-route-id="@product.Id">@product.Name</a></h4>
                                <p class="price">@product.Price.ToString("N0") تومان</p>
                            </div>
                        </div>
                    }
                </div>

                @if (Model.Products.TotalPages > 1)
                {
                    <nav class="pagination">
                         <ul class="pagination" style="list-style:none; padding:0;">
                            @if (Model.Products.HasPreviousPage)
                            {
                                <li class="page-item"><a class="page-link" asp-all-route-data="queryParams" asp-route-page="@(Model.Products.PageNumber - 1)">&laquo;</a></li>
                            }

                            @for (int i = 1; i <= Model.Products.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.Products.PageNumber ? "active" : "")">
                                    <a class="page-link" asp-all-route-data="queryParams" asp-route-page="@i">@i</a>
                                </li>
                            }
                            
                            @if (Model.Products.HasNextPage)
                            {
                                <li class="page-item"><a class="page-link" asp-all-route-data="queryParams" asp-route-page="@(Model.Products.PageNumber + 1)">&raquo;</a></li>
                            }
                        </ul>
                    </nav>
                }
            </section>
        </div>
    </main>
    
    

    @Html.Partial("_CommonScripts")

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            // Simple script to handle checkbox filters
            document.querySelectorAll('.filters-sidebar input[type="checkbox"]').forEach(checkbox => {
                checkbox.addEventListener('change', function() {
                    const form = document.createElement('form');
                    form.method = 'get';
                    form.action = '@Url.Action("Index", "Products")';

                    document.querySelectorAll('#sort-form input[type="hidden"]').forEach(hidden => {
                        if(hidden.name !== this.name) {
                            form.appendChild(hidden.cloneNode(true));
                        }
                    });

                    if (this.checked) {
                        const input = document.createElement('input');
                        input.type = 'hidden';
                        input.name = this.name;
                        input.value = this.value;
                        form.appendChild(input);
                    }
                    
                    document.body.appendChild(form);
                    form.submit();
                });
            });

            // Intersection Observer for fade-in animations
            const observerOptions = {
                root: null, 
                rootMargin: '0px',
                threshold: 0.1 
            };

            const observer = new IntersectionObserver((entries, observer) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('is-visible');
                        observer.unobserve(entry.target);
                    }
                });
            }, observerOptions);

            const cards = document.querySelectorAll('.product-card-fade-in');
            cards.forEach(card => {
                observer.observe(card);
            });
        });
    </script>
</body>
</html>
