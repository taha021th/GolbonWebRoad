@using GolbonWebRoad.Web.Models.Products
@model ProductIndexViewModel
@{
    ViewData["Title"] = "محصولات";
    // Using a more specific layout for the public site if it exists, otherwise the default one.
    Layout = null; 

    // Helper to preserve existing query string parameters for links
    var queryParams = Context.Request.Query.ToDictionary(q => q.Key, q => q.Value.ToString());
}

<!DOCTYPE html>
<html lang="fa" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - فروشگاه Tecture</title>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Vazirmatn:wght@400;700;800&display=swap" rel="stylesheet">
    
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
    
    <link rel="stylesheet" href="https://unpkg.com/aos@next/dist/aos.css" />

    <style>
        :root {
            --bg-color: #121212;
            --primary-text-color: #FFFFFF;
            --secondary-text-color: #a0a0a0;
            --card-bg-color: #1a1a1a;
            --border-color: #333333;
            --accent-color: #4a90e2; 
            --main-font: 'Vazirmatn', sans-serif;
        }
        
        body.light-mode {
            --bg-color: #f4f4f5;
            --card-bg-color: #FFFFFF;
            --primary-text-color: #18181b;
            --secondary-text-color: #71717a;
            --border-color: #e4e4e7;
        }

        * { box-sizing: border-box; margin: 0; padding: 0; }
        html { scroll-behavior: smooth; }

        body { 
            font-family: var(--main-font); 
            background-color: var(--bg-color); 
            color: var(--primary-text-color); 
            line-height: 2.2; 
            overflow-x: hidden;
            transition: background-color 0.3s ease, color 0.3s ease;
        }
        
        .card-like {
            transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
        }
        
        .container { max-width: 1200px; margin: 0 auto; padding: 0 20px; }
        a { text-decoration: none; color: var(--primary-text-color); transition: color 0.3s ease; }
        a:hover { color: var(--accent-color); }
        img { max-width: 100%; height: auto; display: block; }
        
        .promo-banner { background-color: var(--accent-color); color: white; text-align: center; padding: 8px 0; font-weight: 700; font-size: 0.9rem; }
        .main-header { background-color: rgba(18, 18, 18, 0.8); border-bottom: 1px solid var(--border-color); padding: 15px 0; position: sticky; top: 0; width: 100%; z-index: 1000; backdrop-filter: blur(10px); }
        body.light-mode .main-header { background-color: rgba(229, 231, 235, 0.8); }
        .header-container { display: flex; justify-content: space-between; align-items: center; }
        .logo { font-size: 2rem; font-weight: 800; letter-spacing: -1px; }
        .main-nav ul { list-style: none; display: flex; }
        .main-nav ul li { margin-right: 30px; }
        .main-nav a { font-weight: 700; }
        .header-actions { display: flex; align-items: center; gap: 25px; font-size: 1.3rem; }
        #theme-toggle { cursor: pointer; }
        #theme-toggle .fa-sun { display: none; }
        body.light-mode #theme-toggle .fa-sun { display: inline-block; }
        body.light-mode #theme-toggle .fa-moon { display: none; }
        .main-footer { background-color: #000000; color: var(--secondary-text-color); padding: 80px 0 30px; border-top: 1px solid var(--border-color); }
        body.light-mode .main-footer { background-color: #18181b; }
        .footer-content { display: grid; grid-template-columns: repeat(auto-fit, minmax(220px, 1fr)); gap: 40px; }
        .footer-section h4 { color: var(--primary-text-color); margin-bottom: 20px; font-size: 1.2rem; }
        .footer-section ul { list-style: none; padding: 0;}
        .footer-section li { margin-bottom: 10px; }
        .footer-bottom { text-align: center; margin-top: 60px; padding-top: 30px; border-top: 1px solid var(--border-color); font-size: 0.9rem; }
        
        .page-header {
            padding: 60px 0;
            background-color: var(--card-bg-color);
            text-align: center;
            border-bottom: 1px solid var(--border-color);
        }
        .page-header h1 {
            font-size: 3rem;
            font-weight: 800;
        }
        .breadcrumb {
            margin-top: 10px;
            color: var(--secondary-text-color);
        }
        .breadcrumb a {
            color: var(--secondary-text-color);
        }

        .main-content {
            display: flex;
            gap: 30px;
            padding: 50px 0;
        }

        .filters-sidebar {
            width: 280px;
            flex-shrink: 0;
        }
        .filter-group {
            background-color: var(--card-bg-color);
            border: 1px solid var(--border-color);
            margin-bottom: 20px;
            padding: 20px;
        }
        .filter-group h3 {
            font-size: 1.2rem;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 1px solid var(--border-color);
        }
        .filter-group ul {
            list-style: none;
            padding: 0;
        }
        .filter-group li {
            margin-bottom: 10px;
        }
        .filter-group label {
            display: flex;
            align-items: center;
            gap: 10px;
            cursor: pointer;
        }
        .price-slider-values {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
            color: var(--secondary-text-color);
        }
        input[type="range"] {
            width: 100%;
        }

        .products-area {
            flex-grow: 1;
        }
        .toolbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background-color: var(--card-bg-color);
            border: 1px solid var(--border-color);
            padding: 15px;
            margin-bottom: 30px;
        }
        .toolbar select {
            background-color: var(--bg-color);
            color: var(--primary-text-color);
            border: 1px solid var(--border-color);
            padding: 8px;
            font-family: var(--main-font);
        }
        .product-grid {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 30px;
        }
        .plp-product-card {
            background-color: var(--card-bg-color);
            border: 1px solid var(--border-color);
            overflow: hidden;
            text-align: center;
        }
        .plp-product-card .image-container {
            position: relative;
        }
        .plp-product-card img {
            width: 100%;
            height: 280px;
            object-fit: cover;
            transition: transform 0.3s ease;
        }
        .plp-product-card:hover img {
            transform: scale(1.05);
        }
        .product-overlay {
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            background: rgba(0,0,0,0.7);
            padding: 15px;
            display: flex;
            justify-content: center;
            gap: 150px;
            transform: translateY(100%);
            transition: transform 0.3s ease;
        }
        .plp-product-card:hover .product-overlay {
            transform: translateY(0);
        }
        .overlay-btn {
            background-color: white;
            color: #121212;
            border-radius: 50%;
            border: none;
            padding: 10px;
            font-size: 1.1rem;
            cursor: pointer;
            width: 40px;
            height: 40px;
            line-height: 1;
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }
        .product-info {
            padding: 20px;
        }
        .product-info h4 {
            font-size: 1.1rem;
        }
        .product-info .price {
            font-size: 1.2rem;
            font-weight: 700;
            color: var(--accent-color);
            margin-top: 10px;
        }
        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 50px;
            list-style: none;
            padding: 0;
        }
        .pagination a, .pagination span {
            color: var(--primary-text-color);
            padding: 10px 15px;
            border: 1px solid var(--border-color);
            margin: 0 5px;
            transition: all 0.3s ease;
        }
        .pagination li.active a {
            background-color: var(--accent-color);
            border-color: var(--accent-color);
            color: white;
        }
        .pagination li:not(.active) a:hover {
             background-color: var(--accent-color);
            border-color: var(--accent-color);
            color: white;
        }
        .pagination li.disabled span {
            color: var(--secondary-text-color);
        }
        
        @@media (max-width: 992px) {
            .main-nav { display: none; }
            .main-content { flex-direction: column; }
            .filters-sidebar { width: 100%; }
            .product-grid { grid-template-columns: repeat(2, 1fr); }
        }
         @@media (max-width: 576px) {
            .product-grid { grid-template-columns: 1fr; }
            .toolbar { flex-direction: column; gap: 15px; }
        }
    </style>
</head>
<body>
    <div class="promo-banner"><p>ارسال رایگان برای خریدهای بالای ۵۰۰ هزار تومان!</p></div>
    <header class="main-header">
        <div class="container header-container">
            <a href="/" class="logo">Tecture</a>
            <nav class="main-nav">
                <ul>
                    <li><a href="/">خانه</a></li>
                    <li><a href="#">دسته‌بندی‌ها</a></li>
                    <li><a asp-controller="Products" asp-action="Index">محصولات</a></li>
                </ul>
            </nav>
            <div class="header-actions">
                <div id="theme-toggle"><i class="fas fa-moon"></i><i class="fas fa-sun"></i></div>
                <a href="#" class="header-action-link"><i class="fa-solid fa-user"></i></a>
                <a href="#" class="header-action-link"><i class="fa-solid fa-shopping-bag"></i></a>
                <i class="fa-solid fa-magnifying-glass"></i>
            </div>
        </div>
    </header>
    
    <main>
        <header class="page-header" data-aos="fade-in">
            
            <h1>همه محصولات</h1>
            <div class="breadcrumb">
                <a asp-action="Index" asp-controller="Home">خانه</a> / <span>همه محصولات</span>
            </div>
        </header>

        <div class="container main-content">
            <aside class="filters-sidebar card-like" data-aos="fade-right">
                <div class="filter-group card-like">
                    <h3>دسته‌بندی‌ها</h3>
                    <ul>
                        @foreach (var category in Model.Categories)
                        {
                            <li><label><input type="checkbox" name="categoryId" value="@category.Id" @(Model.CurrentCategoryId == category.Id ? "checked" : "")> @category.Name</label></li>
                        }
                    </ul>
                </div>
                <div class="filter-group card-like">
                    <h3>محدوده قیمت</h3>
                    <div class="price-slider">
                        <input type="range" min="100000" max="20000000" value="5000000">
                        <div class="price-slider-values">
                            <span>۱۰۰,۰۰۰ تومان</span>
                            <span>۲۰,۰۰۰,۰۰۰ تومان</span>
                        </div>
                    </div>
                </div>
                <div class="filter-group card-like">
                    <h3>برند</h3>
                    <ul>
                        @foreach (var brand in Model.Brands)
                        {
                            <li><label><input type="checkbox" name="brandId" value="@brand.Id" @(Model.CurrentBrandId == brand.Id ? "checked" : "")> @brand.Name</label></li>
                        }
                    </ul>
                </div>
            </aside>

            <section class="products-area">
                <div class="toolbar card-like" data-aos="fade-in">
                    <p>
                        @if (Model.Products.TotalCount > 0)
                        {
                            <span>نمایش @Model.Products.Items.Count از @Model.Products.TotalCount محصول</span>
                        }
                        else
                        {
                            <span>هیچ محصولی یافت نشد</span>
                        }
                    </p>
                    <div class="sort-by">
                        <form id="sort-form" asp-action="Index" method="get">
                            @foreach (var param in queryParams.Where(q => q.Key != "sortOrder"))
                            {
                                <input type="hidden" name="@param.Key" value="@param.Value" />
                            }
                            <label for="sortOrder">مرتب‌سازی بر اساس: </label>
                            <select name="sortOrder" id="sortOrder" onchange="this.form.submit()">
                                <option value="" selected="@(string.IsNullOrEmpty(Model.CurrentSortOrder))">جدیدترین</option>
                                <option value="popularity">پرفروش‌ترین</option>
                                <option value="price_asc" selected="@(Model.CurrentSortOrder == "price_asc")">ارزان‌ترین</option>
                                <option value="price_desc" selected="@(Model.CurrentSortOrder == "price_desc")">گران‌ترین</option>
                            </select>
                        </form>
                    </div>
                </div>

                <div class="product-grid">
                    @foreach (var product in Model.Products.Items)
                    {
                        <div class="plp-product-card card-like" data-aos="fade-up" data-aos-delay="@((Model.Products.Items.IndexOf(product) % 3) * 100)">
                            <div class="image-container">
                                <a asp-controller="Products" asp-action="Detail" asp-route-id="@product.Id">
                                    <img src="@(string.IsNullOrEmpty(product.ImageUrl) ? $"https://placehold.co/400x280/EFEFEF/AAAAAA?text={product.Name}" : $"{product.ImageUrl}")" alt="@product.Name">
                                </a>
                                <div class="product-overlay">
                                    <button class="overlay-btn" title="افزودن به سبد خرید"><i class="fas fa-shopping-bag"></i></button>
                                    <a asp-controller="Products" asp-action="Detail" asp-route-id="@product.Id" class="overlay-btn" title="مشاهده جزئیات"><i class="fas fa-eye"></i></a>
                                </div>
                            </div>
                            <div class="product-info">
                                <h4><a asp-controller="Products" asp-action="Detail" asp-route-id="@product.Id">@product.Name</a></h4>
                                <p class="price">@product.Price.ToString("N0") تومان</p>
                            </div>
                        </div>
                    }
                </div>

                @if (Model.Products.TotalPages > 1)
                {
                    <nav class="pagination" data-aos="fade-up">
                         <ul class="pagination" style="list-style:none; padding:0;">
                            @if (Model.Products.HasPreviousPage)
                            {
                                <li class="page-item"><a class="page-link" asp-all-route-data="queryParams" asp-route-page="@(Model.Products.PageNumber - 1)">&laquo;</a></li>
                            }

                            @for (int i = 1; i <= Model.Products.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.Products.PageNumber ? "active" : "")">
                                    <a class="page-link" asp-all-route-data="queryParams" asp-route-page="@i">@i</a>
                                </li>
                            }
                            
                            @if (Model.Products.HasNextPage)
                            {
                                <li class="page-item"><a class="page-link" asp-all-route-data="queryParams" asp-route-page="@(Model.Products.PageNumber + 1)">&raquo;</a></li>
                            }
                        </ul>
                    </nav>
                }
            </section>
        </div>
    </main>
    
    <footer class="main-footer"><div class="container footer-content">...</div></footer>

    <script src="https://unpkg.com/aos@next/dist/aos.js"></script>
    <script>
        AOS.init({ duration: 800, once: true });

        (function themeSwitcher() {
            const themeToggleBtn = document.getElementById('theme-toggle');
            if (!themeToggleBtn) return;
            const body = document.body;
            const currentTheme = localStorage.getItem('theme');
            if (currentTheme === 'light') { body.classList.add('light-mode'); }
            themeToggleBtn.addEventListener('click', function() {
                body.classList.toggle('light-mode');
                localStorage.setItem('theme', body.classList.contains('light-mode') ? 'light' : 'dark');
            });
        })();

        // Simple script to handle checkbox filters
        // NOTE: This basic version only supports one filter at a time.
        // A full implementation would require more advanced JavaScript to handle multiple selections.
        document.querySelectorAll('.filters-sidebar input[type="checkbox"]').forEach(checkbox => {
            checkbox.addEventListener('change', function() {
                const form = document.createElement('form');
                form.method = 'get';
                form.action = '@Url.Action("Index", "Products")';

                // Add other existing filters to the form
                 document.querySelectorAll('#sort-form input[type="hidden"]').forEach(hidden => {
                    if(hidden.name !== this.name) {
                        form.appendChild(hidden.cloneNode(true));
                    }
                });

                if (this.checked) {
                    const input = document.createElement('input');
                    input.type = 'hidden';
                    input.name = this.name;
                    input.value = this.value;
                    form.appendChild(input);
                }
                
                document.body.appendChild(form);
                form.submit();
            });
        });

    </script>
</body>
</html>