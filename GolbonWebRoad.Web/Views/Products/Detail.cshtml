@using GolbonWebRoad.Web.Models.Products
@model ProductDetailViewModel
@{
    ViewData["Title"] = "جزئیات محصول";
}

<!DOCTYPE html>
<html lang="fa" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@(string.IsNullOrEmpty(Model.MetaTitle) ? Model.Name : Model.MetaTitle)</title>
    <meta name="description" content="@(string.IsNullOrEmpty(Model.MetaDescription) ? Model.ShortDescription : Model.MetaDescription)">
    @if (!string.IsNullOrEmpty(Model.CanonicalUrl))
    {
        <link rel="canonical" href="@Model.CanonicalUrl" />
    }
    <meta name="description" content="@(string.IsNullOrEmpty(Model.MetaDescription) ? Model.ShortDescription : Model.MetaDescription)">
    @if (!string.IsNullOrEmpty(Model.CanonicalUrl))
    {
        <link rel="canonical" href="@Model.CanonicalUrl" />
    }

    <script>
        // FOUC fix: Add a class to html to hide elements until CSS is loaded
        document.documentElement.classList.add('js-loading');
    </script>

    <link rel="stylesheet" href="~/css/fonts.css" />
    <link rel="stylesheet" href="~/lib/font-awesome/all.min.css" />

    <link rel="stylesheet" href="~/lib/swiper/swiper-bundle.min.css" />

    @Html.Partial("_CommonStyles")

    <style>
        /* FOUC fix: hide header while loading */
        .js-loading .main-header {
            visibility: hidden;
        }

        /* --- Product Detail Page Specific Styles --- */
        
        /* --- استایل‌های اصلی صفحه جزئیات محصول --- */
        .breadcrumb { padding: 20px 0; color: var(--secondary-text-color); border-bottom: 1px solid var(--border-color); transition: border-color 0.3s ease;}
        .breadcrumb a { color: var(--secondary-text-color); }

        .product-detail-section { padding: 50px 0; }
        .product-detail-layout { display: grid; grid-template-columns: 1fr 1fr; gap: 50px; }
        
        /* گالری تصاویر */
        .product-gallery .main-image img { width: 100%; height: auto; border: 1px solid var(--border-color); margin-bottom: 15px; transition: border-color 0.3s ease;}
        .thumbnails { display: grid; grid-template-columns: repeat(4, 1fr); gap: 10px; }
        .thumbnails img { border: 2px solid var(--border-color); cursor: pointer; transition: border-color 0.3s ease; opacity: 0.7; }
        .thumbnails img.active, .thumbnails img:hover { border-color: var(--accent-color); opacity: 1; }

        /* اطلاعات محصول */
        .product-info-main h1 { font-size: 2.5rem; font-weight: 800; margin-bottom: 15px; }
        .rating-reviews { display: flex; align-items: center; gap: 10px; margin-bottom: 20px; color: var(--secondary-text-color); }
        .stars .fas { color: #f5b327; }
        .price-tag { font-size: 2rem; font-weight: 700; color: var(--accent-color); margin-bottom: 20px; }
        .short-description { color: var(--secondary-text-color); margin-bottom: 30px; }
        .options-group { margin-bottom: 30px; }
        .options-group label { font-weight: 700; display: block; margin-bottom: 10px; }
        .color-selector { display: flex; gap: 10px; }
        .color-swatch { width: 30px; height: 30px; border: 2px solid var(--border-color); cursor: pointer; }
        .color-swatch.active { border-color: var(--accent-color); }
        .actions { display: flex; gap: 15px; align-items: center; }
        .quantity-selector { display: flex; align-items: center; border: 1px solid var(--border-color); }
        .quantity-selector button { background: none; border: none; color: var(--primary-text-color); font-size: 1.2rem; padding: 10px 15px; cursor: pointer; }
        .quantity-selector input { width: 50px; text-align: center; background: none; border: none; color: var(--primary-text-color); font-size: 1.1rem; border-left: 1px solid var(--border-color); border-right: 1px solid var(--border-color); }
        .add-to-cart-btn { background-color: var(--accent-color); color: white; border: 2px solid var(--accent-color); padding: 12px 30px; font-weight: 700; cursor: pointer; transition: all 0.3s ease; flex-grow: 1;}
        .add-to-cart-btn:hover { background-color: transparent; color: var(--accent-color); }

        /* بخش تب‌ها */
        .product-tabs-section { padding: 50px 0; background-color: var(--card-bg-color); transition: background-color 0.3s ease; }
        .tab-nav { display: flex; border-bottom: 1px solid var(--border-color); }
        .tab-link { padding: 15px 25px; cursor: pointer; font-weight: 700; border-bottom: 3px solid transparent; }
        .tab-link.active { border-bottom-color: var(--accent-color); color: var(--accent-color); }
        .tab-content { padding: 30px 0; display: none; }
        .tab-content.active { display: block; }
        .tab-content ul { padding-right: 20px; }

        /* بخش محصولات مرتبط */
        .related-products-section { padding: 100px 0; }
        .section-title { font-size: 2.2rem; font-weight: 800; text-align: center; margin-bottom: 40px; }
        .product-card { background-color: var(--card-bg-color); border: 1px solid var(--border-color); transition: transform 0.3s ease; overflow: hidden; text-align: center; }
        .product-card:hover { transform: translateY(-5px); }
        .product-card img { width: 100%; height: 220px; object-fit: cover; }
        .product-card-content { padding: 20px; }
        .product-card h3 { font-size: 1.1rem; margin-bottom: 10px; }
        .product-card .price { font-size: 1.2rem; font-weight: 700; color: var(--accent-color); }
        
        /* --- Review Form Styles --- */
        .review-form-container {
            box-shadow: 0 4px 20px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
        }
        .review-form-container:hover {
            box-shadow: 0 6px 25px rgba(0,0,0,0.15);
        }
        
        .star-label:hover {
            transform: scale(1.1);
        }
        
        .star-label:active {
            transform: scale(0.95);
        }
        
        .submit-review-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(74, 144, 226, 0.4);
        }
        
        .clear-form-btn:hover {
            background-color: var(--border-color);
            color: var(--primary-text-color);
        }
        
        .login-required {
            transition: all 0.3s ease;
        }
        
        .login-required:hover {
            border-color: var(--accent-color);
        }
        
        .login-required a:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(74, 144, 226, 0.4);
        }
        
        textarea:focus {
            outline: none;
            border-color: var(--accent-color);
            box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.1);
        }
        
        .review-item:hover {
            border-color: var(--accent-color);
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

        /* --- Responsive --- */
        @@media (max-width: 992px) { 
            .main-nav, .header-action-link span { display: none; } 
        }
        @@media (max-width: 768px) {
            .product-detail-layout { grid-template-columns: 1fr; }
            .review-form-container { padding: 20px; }
            .form-actions { flex-direction: column; align-items: stretch; }
            .form-actions button { width: 100%; justify-content: center; }
        }
    </style>
</head>
<body>
    @Html.Partial("_Header")
    
    <main>
        <div class="container">
            @if (TempData["CartSuccess"] != null)
            {
                <div class="alert" style="background: #1f6f2e; color: #fff; border-radius: 10px; padding: 12px 16px; margin-bottom: 16px; display:flex; align-items:center; gap:10px;">
                    <i class="fas fa-check-circle"></i>
                    <span>@TempData["CartSuccess"]</span>
                </div>
            }
            <div class="breadcrumb" data-aos="fade-in">
                <a href="/">خانه</a> / <a asp-controller="Products" asp-action="Index">@Model.Category.Name</a> / <span>@Model.Name</span>
            </div>
        </div>

        <section class="product-detail-section">
            <div class="container product-detail-layout">
                <!-- گالری تصاویر -->
                <div class="product-gallery" data-aos="fade-right">
                    <div class="main-image">
                        <img src="@(string.IsNullOrEmpty(Model.MainImageUrl) ? (Model.Images?.FirstOrDefault()?.ImageUrl ?? "https://placehold.co/800x600/EFEFEF/AAAAAA?text=No+Image") : Model.MainImageUrl)" alt="@(string.IsNullOrEmpty(Model.MainImageAltText) ? Model.Name : Model.MainImageAltText)" id="mainProductImage">
                    </div>
                    <div class="thumbnails">
                        @{
                            var thumbs = new List<string>();
                            if (!string.IsNullOrEmpty(Model.MainImageUrl))
                            {
                                thumbs.Add(Model.MainImageUrl);
                            }
                            if (Model.Images != null && Model.Images.Any())
                            {
                                foreach (var img in Model.Images)
                                {
                                    if (!string.IsNullOrEmpty(img.ImageUrl) && img.ImageUrl != Model.MainImageUrl)
                                    {
                                        thumbs.Add(img.ImageUrl);
                                    }
                                }
                            }
                            var idx = 0;
                            foreach (var url in thumbs)
                            {
                                <img src="@url" alt="@Model.Name @(++idx)" class="@(idx == 1 ? "active" : null)">
                            }
                        }
                    </div>
                </div>

                <!-- اطلاعات محصول -->
                <div class="product-info-main" data-aos="fade-left">
                    <h1>@Model.Name</h1>
                    <div class="rating-reviews">
                        <span class="stars">
                            @{
                                var averageRating = Model.Reviews?.Any() == true ? Model.Reviews.Average(r => r.Rating) : 0;
                                var fullStars = (int)Math.Round(averageRating);
                            }
                            @for (int i = 1; i <= 5; i++)
                            {
                                if (i <= fullStars)
                                {
                                    <i class="fas fa-star"></i>
                                }
                                else
                                {
                                    <i class="far fa-star"></i>
                                }
                            }
                        </span>
                        <span>(@(Model.Reviews?.Count ?? 0) نظر)</span>
                    </div>
                    <p class="price-tag">@Model.Variants[0].Price.ToString("N0") تومان</p>
                    <p class="stock-info" style="margin-top:8px; color: var(--secondary-text-color);">
                        موجودی: <strong>@Model.Variants[0].StockQuantity</strong> عدد
                    </p>
                    <p class="short-description">@Model.ShortDescription</p>
                    
                    <div class="options-group">
                        <label class="form-label" style="display:block; margin-bottom:10px; font-weight:600; color: var(--primary-text-color);">انتخاب ورینت:</label>
                        <div class="variant-picker" style="display:flex; flex-wrap:wrap; gap:10px; padding:12px; border:1px solid var(--border-color); border-radius:12px; background: var(--card-bg-color);">
                            @{
                                // Build a quick lookup of AttributeValueId -> Display Value
                                var valueLookup = new Dictionary<int, string>();
                                if (Model.AttributeGroups != null)
                                {
                                    foreach (var g in Model.AttributeGroups)
                                    {
                                        foreach (var v in g.Values)
                                        {
                                            valueLookup[v.Id] = v.Value;
                                        }
                                    }
                                }
                                var selectedRendered = false;
                                foreach (var v in Model.Variants)
                                {
                                    var labels = v.AttributeValueIds != null && v.AttributeValueIds.Any()
                                        ? string.Join(" / ", v.AttributeValueIds.Select(id => valueLookup.ContainsKey(id) ? valueLookup[id] : $"Value {id}"))
                                        : "پیش‌فرض";
                                    var isDisabled = v.StockQuantity <= 0;
                                    var isSelected = !selectedRendered && !isDisabled; // auto-select first available variant
                            <button type="button"
                                    class="variant-pill@(isSelected ? " selected" : "")@(isDisabled ? " disabled" : "")"
                                    data-variant-id="@v.Id"
                                    data-price="@v.Price"
                                    data-stock="@v.StockQuantity"
                                    style="padding:10px 14px; border-radius:999px; border:1px solid var(--border-color); background: @(isSelected ? "var(--accent-color)" : "transparent"); color: @(isSelected ? "#fff" : "var(--primary-text-color)"); cursor:@(isDisabled ? "not-allowed" : "pointer"); opacity:@(isDisabled ? "0.5" : "1"); transition: all .2s;">
                                <span style="font-weight:600;">@labels</span>
                                <span style="margin:0 8px; opacity:.6;">|</span>
                                <span style="font-size:.9rem; opacity:.9;">@v.Price.ToString("N0") تومان</span>
                            </button>
                                    selectedRendered = selectedRendered || isSelected;
                                }
                            }
                        </div>
                        <small id="variantPrice" style="display:block; margin-top:10px; color: var(--secondary-text-color);"></small>
                    </div>

                    <form asp-controller="Cart" asp-action="AddToCart" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@Model.Id" />
                        <input type="hidden" id="selectedVariantId" name="variantId" value="" />
                        <div class="actions">
                            <div class="quantity-selector">
                                <button type="button" id="qtyMinus">-</button>
                                <input id="qtyInput" name="quantity" type="number" value="1" min="1" max="@Model.Variants[0].StockQuantity">
                                <button type="button" id="qtyPlus">+</button>
                            </div>
                            <button type="submit" id="addToCartBtn" class="add-to-cart-btn" @(Model.Variants[0].StockQuantity <= 0 ? "disabled" : null)><i class="fas fa-shopping-bag"></i> افزودن به سبد خرید</button>
                        </div>
                    </form>
                </div>
            </div>
        </section>

        <!-- بخش توضیحات تکمیلی -->
        <section class="product-tabs-section" data-aos="fade-up">
            <div class="container">
                <nav class="tab-nav">
                    <span class="tab-link active" data-tab="description">توضیحات</span>
                    <span class="tab-link" data-tab="specs">مشخصات</span>
                    <span class="tab-link" data-tab="reviews">نظرات (@(Model.Reviews?.Count ?? 0))</span>
                </nav>
                <div id="description" class="tab-content active">
                    <p>@Html.Raw(Model.Description)</p>
                </div>
                <div id="specs" class="tab-content">
                    <ul>
                        <li><strong>جنس بدنه:</strong> چوب راش گرجستان</li>
                        <li><strong>جنس پارچه:</strong> کتان نانو</li>
                        <li><strong>ارتفاع:</strong> ۸۵ سانتی‌متر</li>
                        <li><strong>عرض نشیمن:</strong> ۶۰ سانتی‌متر</li>
                        <li><strong>وزن قابل تحمل:</strong> ۱۲۰ کیلوگرم</li>
                    </ul>
                </div>
                <div id="reviews" class="tab-content">
                    <!-- فرم ثبت نظر -->
                    <div class="review-form-container" style="background-color: var(--card-bg-color); border: 1px solid var(--border-color); border-radius: 12px; padding: 30px; margin-bottom: 40px; transition: border-color 0.3s ease;">
                        <h3 style="margin-bottom: 25px; color: var(--primary-text-color); font-size: 1.4rem; font-weight: 700; display: flex; align-items: center; gap: 10px;">
                            <i class="fas fa-edit" style="color: var(--accent-color);"></i>
                            ثبت نظر جدید
                        </h3>
                        
                        @if (User.Identity.IsAuthenticated)
                        {
                            <form asp-controller="Products" asp-action="CreateReview" method="post" id="reviewForm">
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="ProductId" value="@Model.Id" />
                                
                                <div class="form-group" style="margin-bottom: 25px;">
                                    <label style="display: block; margin-bottom: 10px; color: var(--primary-text-color); font-weight: 600; font-size: 1rem;">امتیاز شما</label>
                                    <div class="rating-input" style="display: flex; gap: 8px; align-items: center;">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <input type="radio" name="Rating" value="@i" id="rating_@i" style="display: none;" required>
                                            <label for="rating_@i" class="star-label" style="cursor: pointer; font-size: 2rem; color: #ddd; transition: all 0.2s ease; user-select: none;">
                                                <i class="far fa-star"></i>
                                            </label>
                                        }
                                        <span class="rating-text" style="margin-right: 15px; color: var(--secondary-text-color); font-size: 0.9rem;">لطفاً امتیاز خود را انتخاب کنید</span>
                                    </div>
                                </div>
                                
                                <div class="form-group" style="margin-bottom: 25px;">
                                    <label for="ReviewText" style="display: block; margin-bottom: 10px; color: var(--primary-text-color); font-weight: 600; font-size: 1rem;">نظر شما</label>
                                    <textarea name="ReviewText" id="ReviewText" rows="5" 
                                              style="width: 100%; padding: 15px; border: 2px solid var(--border-color); border-radius: 8px; background-color: var(--bg-color); color: var(--primary-text-color); font-size: 1rem; line-height: 1.5; resize: vertical; transition: border-color 0.3s ease; font-family: inherit;"
                                              placeholder="نظر خود را در مورد این محصول بنویسید..." required></textarea>
                                </div>
                                
                                <div class="form-actions" style="display: flex; gap: 15px; align-items: center;">
                                    <button type="submit" class="submit-review-btn" 
                                            style="background: linear-gradient(135deg, var(--accent-color), #357abd); color: white; border: none; padding: 12px 30px; border-radius: 8px; font-size: 1rem; font-weight: 600; cursor: pointer; transition: all 0.3s ease; display: flex; align-items: center; gap: 8px;">
                                        <i class="fas fa-paper-plane"></i>
                                        ارسال نظر
                                    </button>
                                    <button type="button" class="clear-form-btn" 
                                            style="background: transparent; color: var(--secondary-text-color); border: 1px solid var(--border-color); padding: 12px 20px; border-radius: 8px; font-size: 1rem; cursor: pointer; transition: all 0.3s ease;">
                                        <i class="fas fa-eraser"></i>
                                        پاک کردن
                                    </button>
                                </div>
                            </form>
                        }
                        else
                        {
                            <div class="login-required" style="text-align: center; padding: 30px; background-color: var(--bg-color); border-radius: 8px; border: 1px dashed var(--border-color);">
                                <i class="fas fa-lock" style="font-size: 2.5rem; color: var(--accent-color); margin-bottom: 15px;"></i>
                                <h4 style="margin-bottom: 10px; color: var(--primary-text-color);">برای ثبت نظر باید وارد حساب کاربری خود شوید</h4>
                                <p style="margin-bottom: 20px; color: var(--secondary-text-color);">لطفاً ابتدا وارد حساب کاربری خود شوید تا بتوانید نظر خود را ثبت کنید.</p>
                                <a asp-area="Identity" asp-page="/Account/Login" 
                                   style="display: inline-flex; align-items: center; gap: 8px; background: var(--accent-color); color: white; padding: 12px 25px; border-radius: 8px; text-decoration: none; font-weight: 600; transition: all 0.3s ease;">
                                    <i class="fas fa-sign-in-alt"></i>
                                    ورود به حساب کاربری
                                </a>
                            </div>
                        }
                    </div>

                    <!-- لیست نظرات -->
                    @if (Model.Reviews != null && Model.Reviews.Any())
                    {
                        <div class="reviews-container">
                            <h4 style="margin-bottom: 20px; color: var(--primary-text-color); font-size: 1.2rem; font-weight: 600; display: flex; align-items: center; gap: 10px;">
                                <i class="fas fa-comments" style="color: var(--accent-color);"></i>
                                نظرات کاربران (@Model.Reviews.Count)
                            </h4>
                            @foreach (var review in Model.Reviews)
                            {
                                <div class="review-item" style="background-color: var(--card-bg-color); border: 1px solid var(--border-color); border-radius: 8px; padding: 20px; margin-bottom: 20px; transition: border-color 0.3s ease;">
                                    <div class="review-header" style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;">
                                        <div class="reviewer-info">
                                            <h4 style="margin: 0; color: var(--primary-text-color); font-size: 1.1rem;">@review.UserName</h4>
                                            <p style="margin: 5px 0 0 0; color: var(--secondary-text-color); font-size: 0.9rem;">@review.ReviewDate.ToString("yyyy/MM/dd")</p>
                                        </div>
                                        <div class="review-rating">
                                            @for (int i = 1; i <= 5; i++)
                                            {
                                                if (i <= review.Rating)
                                                {
                                                    <i class="fas fa-star" style="color: #f5b327; margin-left: 2px;"></i>
                                                }
                                                else
                                                {
                                                    <i class="far fa-star" style="color: #f5b327; margin-left: 2px;"></i>
                                                }
                                            }
                                        </div>
                                    </div>
                                    <div class="review-content">
                                        <p style="margin: 0; color: var(--primary-text-color); line-height: 1.6;">@review.ReviewText</p>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="no-reviews" style="text-align: center; padding: 40px; color: var(--secondary-text-color);">
                            <i class="fas fa-comment-slash" style="font-size: 3rem; margin-bottom: 20px; opacity: 0.5;"></i>
                            <h3 style="margin-bottom: 10px;">هنوز نظری ثبت نشده است</h3>
                            <p>اولین نفری باشید که برای این محصول نظر می‌دهد!</p>
                        </div>
                    }
                </div>
            </div>
        </section>
        
        <!-- محصولات مرتبط -->
        <section class="related-products-section" data-aos="fade-up">
            <div class="container">
                <h2 class="section-title">محصولات مرتبط</h2>
                <div class="swiper related-products-swiper">
                    <div class="swiper-wrapper">
                        <!-- محصول مرتبط ۱ -->
                        <div class="swiper-slide">
                            <div class="product-card"><img src="/images/hero-background.jpg" alt="کاناپه مدرن سبز"><div class="product-card-content"><h3>کاناپه مدرن سبز</h3><p class="price">8,500,000 تومان</p></div></div>
                        </div>
                        <!-- محصول مرتبط ۲ -->
                        <div class="swiper-slide">
                            <div class="product-card"><img src="/images/hero-background.jpg" alt="چراغ مطالعه رومیزی"><div class="product-card-content"><h3>چراغ مطالعه رومیزی</h3><p class="price">1,850,000 تومان</p></div></div>
                        </div>
                        <!-- محصول مرتبط ۳ -->
                        <div class="swiper-slide">
                            <div class="product-card"><img src="/images/hero-background.jpg" alt="آباژور ایستاده"><div class="product-card-content"><h3>آباژور ایستاده</h3><p class="price">2,100,000 تومان</p></div></div>
                        </div>
                        <!-- محصول مرتبط ۴ -->
                         <div class="swiper-slide">
                            <div class="product-card"><img src="/images/hero-background.jpg" alt="صندلی تک نفره کرم"><div class="product-card-content"><h3>صندلی تک نفره کرم</h3><p class="price">4,600,000 تومان</p></div></div>
                        </div>
                    </div>
                </div>
            </div>
        </section>

    </main>
    
    
    @Html.Partial("_Footer")
    @Html.Partial("_CommonScripts")       
    
    <script src="~/lib/swiper/swiper-bundle.min.js" defer></script>
    
    <script>
        // FOUC fix: remove loading class after all resources are loaded
        window.addEventListener('load', function() {
            document.documentElement.classList.remove('js-loading');
        });

        document.addEventListener('DOMContentLoaded', function() {
            // منطق گالری تصاویر
            const mainImage = document.getElementById('mainProductImage');
            const thumbnails = document.querySelectorAll('.thumbnails img');
            thumbnails.forEach(thumb => {
                thumb.addEventListener('click', function() {
                    document.querySelector('.thumbnails img.active').classList.remove('active');
                    this.classList.add('active');
                    mainImage.src = this.src.replace('w=200', 'w=800'); // Load higher resolution image
                });
            });

            // منطق تب‌ها
            const tabLinks = document.querySelectorAll('.tab-link');
            const tabContents = document.querySelectorAll('.tab-content');
            tabLinks.forEach(link => {
                link.addEventListener('click', function() {
                    const tabId = this.dataset.tab;
                    tabLinks.forEach(l => l.classList.remove('active'));
                    tabContents.forEach(c => c.classList.remove('active'));
                    this.classList.add('active');
                    document.getElementById(tabId).classList.add('active');
                });
            });

            // اسلایدر محصولات مرتبط
            const relatedSwiper = new Swiper('.related-products-swiper', {
                spaceBetween: 30,
                slidesPerView: 1,
                breakpoints: {
                    640: { slidesPerView: 2 },
                    768: { slidesPerView: 3 },
                    1024: { slidesPerView: 4 },
                },
            });

            // Quantity controls with stock limit
            const qtyInput = document.getElementById('qtyInput');
            const maxQty = parseInt(qtyInput.getAttribute('max') || '99', 10);
            document.getElementById('qtyPlus').addEventListener('click', function () {
                const current = parseInt(qtyInput.value || '1', 10);
                qtyInput.value = Math.min(maxQty, current + 1);
            });
            document.getElementById('qtyMinus').addEventListener('click', function () {
                const current = parseInt(qtyInput.value || '1', 10);
                qtyInput.value = Math.max(1, current - 1);
            });

            // Variant selection logic
            const variants = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Variants));
            const variantPriceEl = document.getElementById('variantPrice');
            const selectedVariantInput = document.getElementById('selectedVariantId');
            const addToCartBtn = document.getElementById('addToCartBtn');

            const variantPills = document.querySelectorAll('.variant-pill');
            function setActivePill(pill) {
                variantPills.forEach(p => {
                    if (p.classList.contains('selected')) {
                        p.classList.remove('selected');
                        p.style.background = 'transparent';
                        p.style.color = 'var(--primary-text-color)';
                    }
                });
                pill.classList.add('selected');
                pill.style.background = 'var(--accent-color)';
                pill.style.color = '#fff';
            }
            function updateFromPill(pill) {
                const variantId = parseInt(pill.getAttribute('data-variant-id'));
                const price = parseFloat(pill.getAttribute('data-price')) || 0;
                const stock = parseInt(pill.getAttribute('data-stock')) || 0;

                selectedVariantInput.value = isNaN(variantId) ? '' : variantId;
                variantPriceEl.textContent = price ? `قیمت ورینت: ${price.toLocaleString()} تومان` : '';

                const qtyInput = document.getElementById('qtyInput');
                if (qtyInput) {
                    qtyInput.setAttribute('max', stock > 0 ? String(stock) : '0');
                    if (parseInt(qtyInput.value || '1') > stock) {
                        qtyInput.value = stock > 0 ? '1' : '0';
                    }
                }
                if (addToCartBtn) {
                    addToCartBtn.disabled = stock <= 0;
                }
            }
            variantPills.forEach(pill => {
                if (!pill.classList.contains('disabled')) {
                    pill.addEventListener('click', function () {
                        setActivePill(this);
                        updateFromPill(this);
                    });
                }
            });
            const initial = Array.from(variantPills).find(p => p.classList.contains('selected')) || variantPills[0];
            if (initial) {
                updateFromPill(initial);
            }

            // Review form functionality
            (function reviewFormHandler() {
                const ratingInputs = document.querySelectorAll('input[name="Rating"]');
                const starLabels = document.querySelectorAll('.star-label');
                const ratingText = document.querySelector('.rating-text');
                const clearBtn = document.querySelector('.clear-form-btn');
                const reviewForm = document.getElementById('reviewForm');
                const reviewTextarea = document.getElementById('ReviewText');

                const ratingTexts = [
                    'لطفاً امتیاز خود را انتخاب کنید',
                    'خیلی ضعیف',
                    'ضعیف',
                    'متوسط',
                    'خوب',
                    'عالی'
                ];

                starLabels.forEach((label, index) => {
                    label.addEventListener('click', function() {
                        const rating = index + 1;
                        
                        starLabels.forEach((l, i) => {
                            const icon = l.querySelector('i');
                            if (i < rating) {
                                icon.className = 'fas fa-star';
                                l.style.color = '#f5b327';
                            } else {
                                icon.className = 'far fa-star';
                                l.style.color = '#ddd';
                            }
                        });
                        
                        if (ratingText) {
                            ratingText.textContent = ratingTexts[rating];
                            ratingText.style.color = 'var(--accent-color)';
                        }
                    });

                    label.addEventListener('mouseenter', function() {
                        const rating = index + 1;
                        starLabels.forEach((l, i) => {
                            const icon = l.querySelector('i');
                            if (i < rating) {
                                icon.className = 'fas fa-star';
                                l.style.color = '#f5b327';
                            } else {
                                icon.className = 'far fa-star';
                                l.style.color = '#ddd';
                            }
                        });
                    });
                });

                const ratingContainer = document.querySelector('.rating-input');
                if (ratingContainer) {
                    ratingContainer.addEventListener('mouseleave', function() {
                        const checkedRating = document.querySelector('input[name="Rating"]:checked');
                        if (checkedRating) {
                            const rating = parseInt(checkedRating.value);
                            starLabels.forEach((l, i) => {
                                const icon = l.querySelector('i');
                                if (i < rating) {
                                    icon.className = 'fas fa-star';
                                    l.style.color = '#f5b327';
                                } else {
                                    icon.className = 'far fa-star';
                                    l.style.color = '#ddd';
                                }
                            });
                        } else {
                            starLabels.forEach(l => {
                                const icon = l.querySelector('i');
                                icon.className = 'far fa-star';
                                l.style.color = '#ddd';
                            });
                        }
                    });
                }

                if (clearBtn) {
                    clearBtn.addEventListener('click', function() {
                        ratingInputs.forEach(input => input.checked = false);
                        starLabels.forEach(l => {
                            const icon = l.querySelector('i');
                            icon.className = 'far fa-star';
                            l.style.color = '#ddd';
                        });
                        if (ratingText) {
                            ratingText.textContent = ratingTexts[0];
                            ratingText.style.color = 'var(--secondary-text-color)';
                        }
                        
                        if (reviewTextarea) {
                            reviewTextarea.value = '';
                        }
                    });
                }

                if (reviewForm) {
                    reviewForm.addEventListener('submit', function(e) {
                        const selectedRating = document.querySelector('input[name="Rating"]:checked');
                        const reviewText = reviewTextarea ? reviewTextarea.value.trim() : '';
                        
                        if (!selectedRating) {
                            e.preventDefault();
                            alert('لطفاً امتیاز خود را انتخاب کنید');
                            return false;
                        }
                        
                        if (!reviewText) {
                            e.preventDefault();
                            alert('لطفاً نظر خود را بنویسید');
                            if (reviewTextarea) reviewTextarea.focus();
                            return false;
                        }
                        
                        if (reviewText.length < 10) {
                            e.preventDefault();
                            alert('نظر شما باید حداقل ۱۰ کاراکتر باشد');
                            if (reviewTextarea) reviewTextarea.focus();
                            return false;
                        }
                    });
                }
            })();

            // Display success/error messages
            (function messageHandler() {
                const successMessage = '@TempData["Success"]';
                const errorMessage = '@TempData["Error"]';
                
                if (successMessage) {
                    showNotification(successMessage, 'success');
                }
                
                if (errorMessage) {
                    showNotification(errorMessage, 'error');
                }
                
                function showNotification(message, type) {
                    const notification = document.createElement('div');
                    notification.style.cssText = `
                        position: fixed;
                        top: 20px;
                        right: 20px;
                        padding: 15px 20px;
                        border-radius: 8px;
                        color: white;
                        font-weight: 600;
                        z-index: 10000;
                        max-width: 400px;
                        box-shadow: 0 4px 12px rgba(0,0,0,0.3);
                        transform: translateX(100%);
                        transition: transform 0.3s ease;
                    `;
                    
                    if (type === 'success') {
                        notification.style.background = 'linear-gradient(135deg, #4CAF50, #45a049)';
                    } else {
                        notification.style.background = 'linear-gradient(135deg, #f44336, #d32f2f)';
                    }
                    
                    notification.innerHTML = `
                        <div style="display: flex; align-items: center; gap: 10px;">
                            <i class="fas ${type === 'success' ? 'fa-check-circle' : 'fa-exclamation-circle'}"></i>
                            <span>${message}</span>
                        </div>
                    `;
                    
                    document.body.appendChild(notification);
                    
                    setTimeout(() => {
                        notification.style.transform = 'translateX(0)';
                    }, 100);
                    
                    setTimeout(() => {
                        notification.style.transform = 'translateX(100%)';
                        setTimeout(() => {
                            if (notification.parentNode) {
                                notification.parentNode.removeChild(notification);
                            }
                        }, 300);
                    }, 5000);
                }
            })();
        });
    </script>
</body>
</html>

