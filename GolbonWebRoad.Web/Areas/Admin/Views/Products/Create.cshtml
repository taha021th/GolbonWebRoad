@model GolbonWebRoad.Web.Areas.Admin.Models.Products.ViewModels.CreateProductViewModel
@{
    ViewData["Title"] = "افزودن محصول جدید";
}

<form asp-action="Create" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3">@ViewData["Title"]</h1>
        <div>
            <a asp-action="Index" class="btn btn-secondary">انصراف</a>
            <button type="submit" class="btn btn-primary">ذخیره محصول</button>
        </div>
    </div>

    <div asp-validation-summary="All" class="alert alert-danger"></div>

    <div class="row g-4">
        <!-- Main Content -->
        <div class="col-lg-8">
            <div class="card shadow-sm mb-4">
                <div class="card-header">اطلاعات اصلی</div>
                <div class="card-body">
                    <div class="mb-3">
                        <label asp-for="Name" class="form-label"></label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Slog" class="form-label"></label>
                        <input asp-for="Slog" class="form-control" />
                        <span asp-validation-for="Slog" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="ShortDescription" class="form-label"></label>
                        <textarea asp-for="ShortDescription" class="form-control" rows="3"></textarea>
                        <span asp-validation-for="ShortDescription" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Description" class="form-label"></label>
                        <textarea asp-for="Description" class="form-control" rows="6"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                     <div class="mb-3">
                        <label asp-for="BasePrice" class="form-label"></label>
                        <input asp-for="BasePrice" type="number" class="form-control" />
                        <span asp-validation-for="BasePrice" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="card shadow-sm mb-4">
                <div class="card-header">تصویر اصلی</div>
                <div class="card-body">
                    <label asp-for="MainImage" class="form-label"></label>
                    <input type="file" asp-for="MainImage" class="form-control" />
                    <span asp-validation-for="MainImage" class="text-danger"></span>
                    <small class="text-muted d-block mt-2">این تصویر در کارت‌های پنل ادمین و لیست محصولات به عنوان تصویر اصلی نمایش داده می‌شود.</small>
                </div>
            </div>

            <div class="card shadow-sm mb-4">
                <div class="card-header">تصاویر</div>
                <div class="card-body">
                    <label asp-for="Images" class="form-label"></label>
                    <input type="file" asp-for="Images" multiple class="form-control" />
                    <span asp-validation-for="Images" class="text-danger"></span>
                </div>
            </div>
            
            <div class="card shadow-sm mt-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <span>واریانت‌های ایجاد شده</span>
                    <button type="button" id="show-add-variant-modal-btn" class="btn btn-sm btn-outline-primary">افزودن واریانت دستی</button>
                </div>
                <div class="card-body">
                    <table class="table" id="variants-table">
                        <thead>
                            <tr>
                                <th>ویژگی‌ها</th>
                                <th>SKU</th>
                                <th class="text-end">قیمت</th>
                                <th class="text-end">قیمت قدیم</th>
                                <th class="text-end">موجودی</th>
                                <th>عملیات</th>
                            </tr>
                        </thead>
                        <tbody id="variants-tbody">
                            <!-- Rows for variants will be added here -->
                        </tbody>
                    </table>
                    <div id="variants-hidden-inputs"></div>
                </div>
            </div>
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <div class="card shadow-sm mb-4">
                <div class="card-header">دسته‌بندی و برند</div>
                <div class="card-body">
                    <div class="mb-3">
                        <label asp-for="CategoryId" class="form-label"></label>
                        <select asp-for="CategoryId" asp-items="Model.CategoryOptions" class="form-select">
                            <option value="">یک دسته‌بندی انتخاب کنید</option>
                        </select>
                        <span asp-validation-for="CategoryId" class="text-danger"></span>
                    </div>
                    <div>
                        <label asp-for="BrandId" class="form-label"></label>
                        <select asp-for="BrandId" asp-items="Model.BrandOptions" class="form-select">
                            <option value="">یک برند انتخاب کنید</option>
                        </select>
                        <span asp-validation-for="BrandId" class="text-danger"></span>
                    </div>
                </div>
            </div>

             <div class="card shadow-sm mb-4">
                <div class="card-header">
                    مرحله ۱: انتخاب مقادیر ویژگی‌ها
                </div>
                <div class="card-body">
                    <p class="text-muted small">ویژگی‌هایی را که می‌خواهید برای تعریف واریانت‌ها استفاده کنید، انتخاب نمایید.</p>
                    @for (var i = 0; i < Model.AvailableAttributes.Count; i++)
                    {
                        <div class="form-check">
                            <input type="hidden" asp-for="AvailableAttributes[i].Id" />
                            <input type="hidden" asp-for="AvailableAttributes[i].Name" />
                            <input class="form-check-input attribute-checkbox" type="checkbox" asp-for="AvailableAttributes[i].IsSelected" data-attribute-id="@Model.AvailableAttributes[i].Id">
                            <label class="form-check-label" asp-for="AvailableAttributes[i].IsSelected">@Model.AvailableAttributes[i].Name</label>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</form>

<!-- Add Variant Modal -->
<div class="modal fade" id="addVariantModal" tabindex="-1" aria-labelledby="addVariantModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addVariantModalLabel">افزودن واریانت دستی</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="modal-attributes-container">
                    <!-- Attribute selectors will be dynamically inserted here -->
                </div>
                <div class="mb-3">
                    <label for="variant-sku" class="form-label">SKU</label>
                    <input type="text" id="variant-sku" class="form-control">
                </div>
                <div class="mb-3">
                    <label for="variant-price" class="form-label">قیمت</label>
                    <input type="number" id="variant-price" class="form-control" min="0">
                </div>
                 <div class="mb-3">
                    <label for="variant-old-price" class="form-label">قیمت قدیم</label>
                    <input type="number" id="variant-old-price" class="form-control" min="0">
                </div>
                <div class="mb-3">
                    <label for="variant-stock" class="form-label">موجودی</label>
                    <input type="number" id="variant-stock" class="form-control" min="0">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">بستن</button>
                <button type="button" id="save-variant-btn" class="btn btn-primary">افزودن</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            function formatNumber(value) {
                if (value === null || value === undefined || value === '') return '-';
                const n = Number(value);
                if (isNaN(n)) return value;
                return n.toLocaleString('fa-IR');
            }
            // --- Modal & Variant Data ---
            const addVariantModal = new bootstrap.Modal(document.getElementById('addVariantModal'));
            const showModalBtn = document.getElementById('show-add-variant-modal-btn');
            const saveVariantBtn = document.getElementById('save-variant-btn');
            const attributeGroups = @Html.Raw(Json.Serialize(Model.AttributeGroups));
            let variantIndex = 0; // To keep track of the variant index for form submission

            // --- Modal Controls ---
            showModalBtn.addEventListener('click', function () {
                const selectedAttributeIds = Array.from(document.querySelectorAll('.attribute-checkbox:checked'))
                                                  .map(cb => parseInt(cb.dataset.attributeId));

                if (selectedAttributeIds.length === 0) {
                    alert('لطفا ابتدا حداقل یک ویژگی را از کادر "مرحله ۱" انتخاب کنید.');
                    return;
                }

                populateModal(selectedAttributeIds);
                addVariantModal.show();
            });

            function populateModal(selectedAttributeIds) {
                const container = document.getElementById('modal-attributes-container');
                container.innerHTML = ''; // Clear previous content

                selectedAttributeIds.forEach(id => {
                    const group = attributeGroups.find(g => g.attributeId === id);
                    if (group) {
                        let attributeHtml = `<div class="mb-3" data-attribute-id="${id}">
                                                <label class="form-label">${group.attributeName}</label><div>`;

                        group.values.forEach(val => {
                             attributeHtml += `<div class="form-check form-check-inline">
                                                  <input class="form-check-input" type="radio" name="attribute_${id}" value="${val.value}" id="attr_val_${val.value}">
                                                  <label class="form-check-label" for="attr_val_${val.value}">${val.text}</label>
                                               </div>`;
                        });

                        attributeHtml += '</div></div>';
                        container.insertAdjacentHTML('beforeend', attributeHtml);
                    }
                });
            }

            // --- Saving Variant ---
            saveVariantBtn.addEventListener('click', function () {
                const sku = document.getElementById('variant-sku').value;
                const price = document.getElementById('variant-price').value;
                const oldPrice = document.getElementById('variant-old-price').value;
                const stock = document.getElementById('variant-stock').value;

                if (!sku || !price || !stock) {
                    alert('لطفا تمام فیلدهای SKU، قیمت و موجودی را پر کنید.');
                    return;
                }
                if (oldPrice && Number(oldPrice) <= Number(price)) {
                    alert('قیمت قدیم باید بیشتر از قیمت باشد.');
                    return;
                }
                
                const selectedValues = [];
                const selectedTexts = [];
                const modalAttributesContainer = document.getElementById('modal-attributes-container');
                const radioButtons = modalAttributesContainer.querySelectorAll('input[type="radio"]:checked');
                
                radioButtons.forEach(radio => {
                    selectedValues.push(radio.value);
                    selectedTexts.push(radio.nextElementSibling.textContent);
                });
                
                 if (radioButtons.length < document.querySelectorAll('.attribute-checkbox:checked').length) {
                    alert('لطفا برای تمام ویژگی های انتخابی یک مقدار مشخص کنید');
                    return;
                }


                addVariantToTable(sku, price, oldPrice, stock, selectedValues, selectedTexts);
                addHiddenInputsForVariant(sku, price, oldPrice, stock, selectedValues);
                
                addVariantModal.hide();
                resetModalForm();
            });

            function addVariantToTable(sku, price, oldPrice, stock, valueIds, valueTexts) {
                const tbody = document.getElementById('variants-tbody');
                const row = document.createElement('tr');
                row.setAttribute('data-variant-index', variantIndex);
                row.innerHTML = `
                    <td>${valueTexts.join(' / ')}</td>
                    <td>${sku}</td>
                    <td class="text-end">${formatNumber(price)}</td>
                    <td class="text-end">${formatNumber(oldPrice)}</td>
                    <td class="text-end">${formatNumber(stock)}</td>
                    <td>
                        <button type=\"button\" class=\"btn btn-sm btn-danger remove-variant-btn\">حذف</button>
                    </td>
                `;
                tbody.appendChild(row);
            }

            function addHiddenInputsForVariant(sku, price, oldPrice, stock, valueIds) {
                const container = document.getElementById('variants-hidden-inputs');
                let inputsHtml = `<div data-variant-index="${variantIndex}">`;
                inputsHtml += `<input type="hidden" name="Variants[${variantIndex}].Sku" value="${sku}" />`;
                inputsHtml += `<input type="hidden" name="Variants[${variantIndex}].Price" value="${price}" />`;
                inputsHtml += `<input type="hidden" name="Variants[${variantIndex}].OldPrice" value="${oldPrice}" />`;
                inputsHtml += `<input type="hidden" name="Variants[${variantIndex}].StockQuantity" value="${stock}" />`;
                
                valueIds.forEach((id, i) => {
                    inputsHtml += `<input type="hidden" name="Variants[${variantIndex}].AttributeValueIds[${i}]" value="${id}" />`;
                });

                inputsHtml += '</div>';
                container.insertAdjacentHTML('beforeend', inputsHtml);
                
                variantIndex++; // Increment for the next variant
            }
            
            function resetModalForm() {
                document.getElementById('variant-sku').value = '';
                document.getElementById('variant-price').value = '';
                document.getElementById('variant-old-price').value = '';
                document.getElementById('variant-stock').value = '';
                document.getElementById('modal-attributes-container').innerHTML = '';
            }

            // --- Deleting Variant ---
            document.getElementById('variants-tbody').addEventListener('click', function(e) {
                if (e.target && e.target.classList.contains('remove-variant-btn')) {
                    const row = e.target.closest('tr');
                    const indexToRemove = row.dataset.variantIndex;
                    
                    // Remove the visual row
                    row.remove();
                    
                    // Remove the corresponding hidden inputs
                    const hiddenInputContainer = document.querySelector(`#variants-hidden-inputs div[data-variant-index="${indexToRemove}"]`);
                    if(hiddenInputContainer) {
                        hiddenInputContainer.remove();
                    }
                }
            });
        });
    </script>
}
