@model GolbonWebRoad.Web.Areas.Admin.Models.Products.ViewModels.EditProductViewModel
@{
    ViewData["Title"] = "ویرایش محصول: " + Model.Name;
}

<form asp-controller="Products" asp-action="Edit" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()
    <input type="hidden" asp-for="Id" />

    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="h3 text-truncate">@ViewData["Title"]</h1>
        <div>
            <a asp-action="Index" class="btn btn-secondary">انصراف</a>
            <button type="submit" class="btn btn-primary">ذخیره تغییرات</button>
        </div>
    </div>

    <div asp-validation-summary="All" class="alert alert-danger"></div>

    <div class="row g-4">
        <!-- Main Content -->
        <div class="col-lg-8">
            <div class="card shadow-sm mb-4">
                <div class="card-header">اطلاعات اصلی</div>
                <div class="card-body">
                    <div class="mb-3">
                        <label asp-for="Name" class="form-label"></label>
                        <input asp-for="Name" class="form-control" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Slog" class="form-label"></label>
                        <input asp-for="Slog" class="form-control" />
                        <span asp-validation-for="Slog" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="ShortDescription" class="form-label"></label>
                        <textarea asp-for="ShortDescription" class="form-control" rows="3"></textarea>
                        <span asp-validation-for="ShortDescription" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Description" class="form-label"></label>
                        <textarea asp-for="Description" class="form-control" rows="6"></textarea>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="BasePrice" class="form-label"></label>
                        <input asp-for="BasePrice" type="number" class="form-control" />
                        <span asp-validation-for="BasePrice" class="text-danger"></span>
                    </div>
                    
                </div>
            </div>

            <div class="card shadow-sm mb-4">
                <div class="card-header">اطلاعات سئو (اختیاری)</div>
                <div class="card-body">
                    <div class="mb-3">
                        <label asp-for="MetaTitle" class="form-label">عنوان سئو (Meta Title)</label>
                        <input asp-for="MetaTitle" class="form-control" />
                        <span asp-validation-for="MetaTitle" class="text-danger"></span>
                        <small class="text-muted d-block mt-1">اگر خالی بماند، از نام محصول استفاده می‌شود.</small>
                    </div>
                    <div class="mb-3">
                        <label asp-for="MetaDescription" class="form-label">توضیحات سئو (Meta Description)</label>
                        <textarea asp-for="MetaDescription" class="form-control" rows="3"></textarea>
                        <span asp-validation-for="MetaDescription" class="text-danger"></span>
                        <small class="text-muted d-block mt-1">توضیحات کوتاه برای نمایش در نتایج گوگل (حدود ۱۵۵ کاراکتر). اگر خالی بماند، از توضیحات کوتاه محصول استفاده می‌شود.</small>
                    </div>
                    <div class="mb-3">
                        <label asp-for="CanonicalUrl" class="form-label">آدرس کانونیکال (Canonical URL)</label>
                        <input asp-for="CanonicalUrl" class="form-control" dir="ltr" />
                        <span asp-validation-for="CanonicalUrl" class="text-danger"></span>
                        <small class="text-muted d-block mt-1">برای جلوگیری از محتوای تکراری. در حالت عادی نیازی به پر کردن این فیلد نیست.</small>
                    </div>
                </div>
            </div>

            <div class="card shadow-sm mb-4">
                <div class="card-header">تصویر اصلی</div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(Model.CurrentMainImageUrl))
                    {
                        <div class="mb-3">
                            <p class="form-label">تصویر فعلی:</p>
                            <img src="@Model.CurrentMainImageUrl" class="rounded border" style="width: 160px; height: 160px; object-fit: cover;" alt="تصویر اصلی فعلی" />
                        </div>
                    }
                    <div class="mb-3">
                        <label asp-for="NewMainImage" class="form-label"></label>
                        <input type="file" asp-for="NewMainImage" class="form-control" />
                        <span asp-validation-for="NewMainImage" class="text-danger"></span>
                        <small class="text-muted d-block mt-2">در صورت انتخاب، تصویر اصلی محصول جایگزین می‌شود.</small>
                    </div>
                    <div class="mb-3">
                        <label asp-for="MainImageAltText" class="form-label">متن جایگزین تصویر اصلی (Alt Text)</label>
                        <input asp-for="MainImageAltText" class="form-control" />
                        <span asp-validation-for="MainImageAltText" class="text-danger"></span>
                        <small class="text-muted d-block mt-1">یک توصیف کوتاه از تصویر برای کمک به سئو و کاربران نابینا.</small>
                    </div>
                </div>
            </div>

            <div class="card shadow-sm mb-4">
                 <div class="card-header">مدیریت تصاویر</div>
                <div class="card-body">
                    @if (Model.Images != null && Model.Images.Any())
                    {
                        <div class="mb-4">
                            <p class="form-label">تصاویر فعلی (برای حذف، تیک بزنید):</p>
                            <div class="d-flex flex-wrap gap-2">
                                @foreach (var image in Model.Images)
                                {
                                    <div class="form-check form-check-inline">
                                        <input class="form-check-input" type="checkbox" name="ImagesToDelete" value="@image.ImageUrl" id="img-@image.Id">
                                        <label class="form-check-label" for="img-@image.Id">
                                            <img src="@image.ImageUrl" class="rounded border" style="width: 80px; height: 80px; object-fit: cover;" alt="تصویر محصول" />
                                        </label>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    <div>
                        <label asp-for="NewImages" class="form-label"></label>
                        <input type="file" asp-for="NewImages" multiple class="form-control" />
                    </div>
                </div>
            </div>
            
            <div class="card shadow-sm mt-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <span>واریانت‌های محصول</span>
                    <button type="button" id="show-add-variant-modal-btn" class="btn btn-sm btn-outline-primary">افزودن واریانت</button>
                </div>
                <div class="card-body">
                    <table class="table" id="variants-table">
                        <thead>
                            <tr>
                                <th>ویژگی‌ها</th>
                                <th>SKU</th>
                                <th>GTIN</th>
                                <th>MPN</th>
                                <th class="text-end">قیمت</th>
                                <th class="text-end">قیمت قدیم</th>
                                <th class="text-end">موجودی</th>
                                <th class="text-end">وزن (گرم)</th>
                                <th class="text-end">طول (cm)</th>
                                <th class="text-end">عرض (cm)</th>
                                <th class="text-end">ارتفاع (cm)</th>
                                <th>عملیات</th>
                            </tr>
                        </thead>
                        <tbody id="variants-tbody">
                            @for (var i = 0; i < Model.Variants.Count; i++)
                            {
                                var v = Model.Variants[i];
                                var valueTexts = Model.AttributeGroups
                                    .SelectMany(g => g.Values)
                                    .Where(val => v.AttributeValueIds.Contains(int.Parse(val.Value)))
                                    .Select(val => val.Text)
                                    .ToList();
                                <tr data-variant-index="@i" data-variant-id="@v.Id">
                                    <td>@string.Join(" / ", valueTexts)</td>
                                    <td>@v.Sku</td>
                                    <td>@(v.Gtin ?? "-")</td>
                                    <td>@(v.Mpn ?? "-")</td>
                                    <td class="text-end">@v.Price.ToString("N0")</td>
                                    <td class="text-end">@((v.OldPrice.HasValue ? v.OldPrice.Value.ToString("N0") : "-"))</td>
                                    <td class="text-end">@v.StockQuantity</td>
                                    <td class="text-end">@v.Weight</td>
                                    <td class="text-end">@v.Length</td>
                                    <td class="text-end">@v.Width</td>
                                    <td class="text-end">@v.Height</td>
                                    <td>
                                        <button type="button" class="btn btn-sm btn-danger remove-variant-btn">حذف</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div id="variants-hidden-inputs">
                         @for (var i = 0; i < Model.Variants.Count; i++)
                        {
                            <div data-variant-index="@i" data-variant-id="@Model.Variants[i].Id">
                                <input type="hidden" name="Variants[@i].Id" value="@Model.Variants[i].Id" />
                                <input type="hidden" name="Variants[@i].Sku" value="@Model.Variants[i].Sku" />
                                <input type="hidden" name="Variants[@i].Price" value="@Model.Variants[i].Price" />
                                <input type="hidden" name="Variants[@i].OldPrice" value="@Model.Variants[i].OldPrice" />
                                <input type="hidden" name="Variants[@i].StockQuantity" value="@Model.Variants[i].StockQuantity" />
                                <input type="hidden" name="Variants[@i].Weight" value="@Model.Variants[i].Weight" />
                                <input type="hidden" name="Variants[@i].Length" value="@Model.Variants[i].Length" />
                                <input type="hidden" name="Variants[@i].Width" value="@Model.Variants[i].Width" />
                                <input type="hidden" name="Variants[@i].Height" value="@Model.Variants[i].Height" />
                                <input type="hidden" name="Variants[@i].Gtin" value="@Model.Variants[i].Gtin" />
                                <input type="hidden" name="Variants[@i].Mpn" value="@Model.Variants[i].Mpn" />
                                @for(var j = 0; j < Model.Variants[i].AttributeValueIds.Count; j++)
                                {
                                    <input type="hidden" name="Variants[@i].AttributeValueIds[@j]" value="@Model.Variants[i].AttributeValueIds[j]" />
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <div class="card shadow-sm mb-4">
                <div class="card-header">دسته‌بندی و برند</div>
                <div class="card-body">
                     <div class="mb-3">
                        <label asp-for="CategoryId" class="form-label"></label>
                        <select asp-for="CategoryId" asp-items="Model.CategoryOptions" class="form-select"></select>
                        <span asp-validation-for="CategoryId" class="text-danger"></span>
                    </div>
                    <div>
                        <label asp-for="BrandId" class="form-label"></label>
                        <select asp-for="BrandId" asp-items="Model.BrandOptions" class="form-select"></select>
                        <span asp-validation-for="BrandId" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="card shadow-sm mb-4">
                <div class="card-header">
                    مرحله ۱: انتخاب مقادیر ویژگی‌ها
                </div>
                <div class="card-body">
                     <p class="text-muted small">ویژگی‌هایی را که می‌خواهید برای تعریف واریانت‌ها استفاده کنید، انتخاب نمایید.</p>
                    @for (var i = 0; i < Model.AvailableAttributes.Count; i++)
                    {
                        <div class="form-check">
                            <input type="hidden" asp-for="AvailableAttributes[i].Id" />
                            <input type="hidden" asp-for="AvailableAttributes[i].Name" />
                            <input class="form-check-input attribute-checkbox" type="checkbox" asp-for="AvailableAttributes[i].IsSelected" data-attribute-id="@Model.AvailableAttributes[i].Id" id="attr_cb_@Model.AvailableAttributes[i].Id">
                            <label class="form-check-label" for="attr_cb_@Model.AvailableAttributes[i].Id">@Model.AvailableAttributes[i].Name</label>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</form>

<!-- Add Variant Modal -->
<div class="modal fade" id="addVariantModal" tabindex="-1" aria-labelledby="addVariantModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addVariantModalLabel">افزودن/ویرایش واریانت</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                 <div id="modal-attributes-container">
                    <!-- Attribute selectors will be dynamically inserted here -->
                </div>
                <div class="mb-3">
                    <label for="variant-sku" class="form-label">SKU</label>
                    <input type="text" id="variant-sku" class="form-control">
                </div>
                <div class="mb-3">
                    <label for="variant-price" class="form-label">قیمت</label>
                    <input type="number" id="variant-price" class="form-control" min="0">
                </div>
                <div class="mb-3">
                    <label for="variant-old-price" class="form-label">قیمت قدیم</label>
                    <input type="number" id="variant-old-price" class="form-control" min="0">
                </div>
                <div class="mb-3">
                    <label for="variant-stock" class="form-label">موجودی</label>
                    <input type="number" id="variant-stock" class="form-control" min="0">
                </div>
                 <div class="row g-2 mb-3">
                     <div class="col-6">
                        <label for="variant-gtin" class="form-label">GTIN</label>
                        <input type="text" id="variant-gtin" class="form-control">
                    </div>
                     <div class="col-6">
                        <label for="variant-mpn" class="form-label">MPN</label>
                        <input type="text" id="variant-mpn" class="form-control">
                    </div>
                </div>
                <div class="row g-2">
                    <div class="col-6 col-md-3">
                        <label for="variant-weight" class="form-label">وزن (گرم)</label>
                        <input type="number" id="variant-weight" class="form-control" min="0">
                    </div>
                    <div class="col-6 col-md-3">
                        <label for="variant-length" class="form-label">طول (cm)</label>
                        <input type="number" id="variant-length" class="form-control" min="0" step="0.01">
                    </div>
                    <div class="col-6 col-md-3">
                        <label for="variant-width" class="form-label">عرض (cm)</label>
                        <input type="number" id="variant-width" class="form-control" min="0" step="0.01">
                    </div>
                    <div class="col-6 col-md-3">
                        <label for="variant-height" class="form-label">ارتفاع (cm)</label>
                        <input type="number" id="variant-height" class="form-control" min="0" step="0.01">
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">بستن</button>
                <button type="button" id="save-variant-btn" class="btn btn-primary">افزودن</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            function formatNumber(value) {
                if (value === null || value === undefined || value === '') return '-';
                const n = Number(value);
                if (isNaN(n)) return value;
                return n.toLocaleString('fa-IR');
            }
            const addVariantModal = new bootstrap.Modal(document.getElementById('addVariantModal'));
            const showModalBtn = document.getElementById('show-add-variant-modal-btn');
            const saveVariantBtn = document.getElementById('save-variant-btn');
            const attributeGroups = @Html.Raw(Json.Serialize(Model.AttributeGroups));
            const variantsTbody = document.getElementById('variants-tbody');
            const hiddenInputsContainer = document.getElementById('variants-hidden-inputs');
            let variantIndex = @Model.Variants.Count;

            showModalBtn.addEventListener('click', function () {
                const selectedAttributeIds = Array.from(document.querySelectorAll('.attribute-checkbox:checked'))
                                                  .map(cb => parseInt(cb.dataset.attributeId));
                if (selectedAttributeIds.length === 0) {
                    alert('لطفا ابتدا حداقل یک ویژگی را انتخاب کنید.');
                    return;
                }
                populateModal(selectedAttributeIds);
                addVariantModal.show();
            });

            function populateModal(selectedAttributeIds) {
                const container = document.getElementById('modal-attributes-container');
                container.innerHTML = '';
                selectedAttributeIds.forEach(id => {
                    const group = attributeGroups.find(g => g.attributeId === id);
                    if (group) {
                        let attributeHtml = `<div class="mb-3" data-attribute-id="${id}"><label class="form-label">${group.attributeName}</label><div>`;
                        group.values.forEach(val => {
                             attributeHtml += `<div class="form-check form-check-inline">
                                                  <input class="form-check-input" type="radio" name="attribute_${id}" value="${val.value}" id="attr_val_${val.value}">
                                                  <label class="form-check-label" for="attr_val_${val.value}">${val.text}</label>
                                               </div>`;
                        });
                        attributeHtml += '</div></div>';
                        container.insertAdjacentHTML('beforeend', attributeHtml);
                    }
                });
            }

            saveVariantBtn.addEventListener('click', function () {
                const sku = document.getElementById('variant-sku').value;
                const price = document.getElementById('variant-price').value;
                const oldPrice = document.getElementById('variant-old-price').value;
                const stock = document.getElementById('variant-stock').value;
                const gtin = document.getElementById('variant-gtin').value;
                const mpn = document.getElementById('variant-mpn').value;
                const weight = document.getElementById('variant-weight').value || 0;
                const length = document.getElementById('variant-length').value || 0;
                const width = document.getElementById('variant-width').value || 0;
                const height = document.getElementById('variant-height').value || 0;

                if (!sku || !price || !stock) {
                    alert('لطفا SKU، قیمت و موجودی را پر کنید.');
                    return;
                }
                if (oldPrice && Number(oldPrice) <= Number(price)) {
                    alert('قیمت قدیم باید بیشتر از قیمت باشد.');
                    return;
                }

                const selectedValues = [];
                const selectedTexts = [];
                const radioButtons = document.querySelectorAll('#modal-attributes-container input[type="radio"]:checked');
                
                radioButtons.forEach(radio => {
                    selectedValues.push(radio.value);
                    selectedTexts.push(radio.nextElementSibling.textContent);
                });

                if (radioButtons.length < document.querySelectorAll('.attribute-checkbox:checked').length) {
                    alert('لطفا برای تمام ویژگی‌های انتخابی یک مقدار مشخص کنید.');
                    return;
                }

                addVariantToTable(sku, price, oldPrice, stock, weight, length, width, height, gtin, mpn, selectedValues, selectedTexts);
                addHiddenInputsForVariant(null, sku, price, oldPrice, stock, weight, length, width, height, gtin, mpn, selectedValues);
                addVariantModal.hide();
                resetModalForm();
            });

            function addVariantToTable(sku, price, oldPrice, stock, weight, length, width, height, gtin, mpn, valueIds, valueTexts) {
                const row = document.createElement('tr');
                row.setAttribute('data-variant-index', variantIndex);
                row.innerHTML = `
                    <td>${valueTexts.join(' / ')}</td>
                    <td>${sku}</td>
                    <td>${gtin || '-'}</td>
                    <td>${mpn || '-'}</td>
                    <td class="text-end">${formatNumber(price)}</td>
                    <td class="text-end">${formatNumber(oldPrice)}</td>
                    <td class="text-end">${formatNumber(stock)}</td>
                    <td class="text-end">${formatNumber(weight)}</td>
                    <td class="text-end">${length}</td>
                    <td class="text-end">${width}</td>
                    <td class="text-end">${height}</td>
                    <td><button type=\"button\" class=\"btn btn-sm btn-danger remove-variant-btn\">حذف</button></td>
                `;
                variantsTbody.appendChild(row);
            }

            function addHiddenInputsForVariant(variantId, sku, price, oldPrice, stock, weight, length, width, height, gtin, mpn, valueIds) {
                let inputsHtml = `<div data-variant-index="${variantIndex}" ${variantId ? `data-variant-id="${variantId}"`: ''}>`;
                if (variantId) {
                     inputsHtml += `<input type="hidden" name="Variants[${variantIndex}].Id" value="${variantId}" />`;
                }
                inputsHtml += `<input type="hidden" name="Variants[${variantIndex}].Sku" value="${sku}" />`;
                inputsHtml += `<input type="hidden" name="Variants[${variantIndex}].Price" value="${price}" />`;
                inputsHtml += `<input type="hidden" name="Variants[${variantIndex}].OldPrice" value="${oldPrice}" />`;
                inputsHtml += `<input type="hidden" name="Variants[${variantIndex}].StockQuantity" value="${stock}" />`;
                inputsHtml += `<input type="hidden" name="Variants[${variantIndex}].Weight" value="${weight}" />`;
                inputsHtml += `<input type="hidden" name="Variants[${variantIndex}].Length" value="${length}" />`;
                inputsHtml += `<input type="hidden" name="Variants[${variantIndex}].Width" value="${width}" />`;
                inputsHtml += `<input type="hidden" name="Variants[${variantIndex}].Height" value="${height}" />`;
                inputsHtml += `<input type="hidden" name="Variants[${variantIndex}].Gtin" value="${gtin}" />`;
                inputsHtml += `<input type="hidden" name="Variants[${variantIndex}].Mpn" value="${mpn}" />`;
                valueIds.forEach((id, i) => {
                    inputsHtml += `<input type="hidden" name="Variants[${variantIndex}].AttributeValueIds[${i}]" value="${id}" />`;
                });
                inputsHtml += '</div>';
                hiddenInputsContainer.insertAdjacentHTML('beforeend', inputsHtml);
                variantIndex++;
            }

            function resetModalForm() {
                document.getElementById('variant-sku').value = '';
                document.getElementById('variant-price').value = '';
                document.getElementById('variant-old-price').value = '';
                document.getElementById('variant-stock').value = '';
                document.getElementById('variant-weight').value = '';
                document.getElementById('variant-length').value = '';
                document.getElementById('variant-width').value = '';
                document.getElementById('variant-height').value = '';
                document.getElementById('variant-gtin').value = '';
                document.getElementById('variant-mpn').value = '';
                document.getElementById('modal-attributes-container').innerHTML = '';
            }

            variantsTbody.addEventListener('click', function(e) {
                if (e.target && e.target.classList.contains('remove-variant-btn')) {
                    const row = e.target.closest('tr');
                    const indexToRemove = row.dataset.variantIndex;
                    const variantId = row.dataset.variantId;

                    const hiddenInputContainer = document.querySelector(`#variants-hidden-inputs div[data-variant-index="${indexToRemove}"]`);

                    if (variantId) { // It's an existing variant, mark for deletion
                        if (hiddenInputContainer) {
                             hiddenInputContainer.insertAdjacentHTML('beforeend', `<input type="hidden" name="Variants[${indexToRemove}].MarkForDeletion" value="true" />`);
                        }
                        row.style.display = 'none'; // Hide the row instead of removing
                    } else { // It's a new variant, just remove it
                         if (hiddenInputContainer) {
                            hiddenInputContainer.remove();
                        }
                        row.remove();
                    }
                }
            });
        });
    </script>
}
